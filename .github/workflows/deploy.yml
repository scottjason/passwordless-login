name: CI/CD Pipeline for Backend and Frontend

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    env:
      COMMIT_SHA: ${{ github.sha }}
      IMAGE_NAME: ghcr.io/${{ github.repository }}/backend
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SVC_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    steps:
      - name: Checkout backend code
        uses: actions/checkout@v3

      - name: Extract Short Commit SHA
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Tag Docker Image
        run: |
          docker build -f backend/Dockerfile -t $IMAGE_NAME:$COMMIT_SHA ./backend
          docker tag $IMAGE_NAME:$COMMIT_SHA $IMAGE_NAME:latest

      - name: Push Docker Image to GHCR
        run: |
          docker push $IMAGE_NAME:$COMMIT_SHA 
          docker push $IMAGE_NAME:latest

      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          echo "$HOME/.railway/bin" >> $GITHUB_PATH

      - name: Deploy Backend to Railway
        run: |
          cd backend
          railway up --service=${{ env.SVC_ID }} --detach

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout frontend code
        uses: actions/checkout@v3

      - name: Set up Docker for frontend
        run: |
          docker build -f frontend/Dockerfile -t passwordless-frontend ./frontend
      # - name: Deploy frontend to Vercel
      #   uses: amondnet/vercel-action@v20
      #   with:
      #     vercel_token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
